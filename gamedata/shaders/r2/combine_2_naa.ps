#include "common.h"

//////////////////////////////////////////////////////////
uniform sampler2D s_distort;
uniform sampler2D s_flares;
uniform sampler2D s_ssao;
uniform sampler2D s_vol;
uniform sampler2D s_rain;
uniform sampler2D s_sunshafts;
uniform sampler2D s_sunshafts0;

uniform float4 c_color_grading; // xyz - color, w - density
//////////////////////////////////////////////////////////
#define EPSDEPTH 0.001
float4 main(combine I):COLOR 
{
	float2 tc0 = I.tc0.xy;
	float depth = get_depth(tc0);
	
	#ifdef USE_DISTORT
		float4 distort = tex2D(s_distort, tc0);
		float2 offset = (distort.xy-.5h)*def_distort;
		float2 center = tc0+offset;
		float depth_x = get_depth(center);
		if ((depth_x+EPSDEPTH)<depth) center = tc0;
	#else
		float2 center = tc0;
	#endif

	float3 img = tex2D(s_image,center).xyz;
	float4 bloom = tex2D(s_bloom,center);
	
	img += bloom.xyz*bloom.a;
	
	#if defined(USE_LENS_FLARES) || defined(USE_LENS_DIRT)
		float4 flares = tex2D(s_flares,center);
		img += flares.xyz*flares.a;
	#endif
		
	#ifdef USE_DISTORT
		float3 blurred = bloom*def_hdr;
		img = lerp(img,blurred,distort.z);
	#endif
	
		
	// color grading
	float fLum = dot(img.xyz, COLOR_GRADING_LUMINANCE)*2;

	float3 cMin = 0.0;
	float3 cMed = c_color_grading.xyz;
	float3 cMax = 1.0;

	float3 cColor = lerp(cMin, cMed , saturate( fLum * 2.0 ) );
	cColor = lerp( cColor, cMax, saturate( fLum - 0.5 ) * 2.0 );

	img.xyz = saturate(lerp( img.xyz, cColor.xyz , saturate( fLum * c_color_grading.w ) ));
	// color grading end

	#ifdef USE_CONTRAST_FILTER
		float3 highcontrast=img.xyz*img.xyz;
		img.xyz=lerp(img.xyz,highcontrast,CONTRAST_FILTER_COEF);
	#endif

	return float4(img,0.f);
}