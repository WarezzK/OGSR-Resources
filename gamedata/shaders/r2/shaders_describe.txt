//Семплеры
$user$position	// RT0: float3 позиция в view space + float material. В материале хранится константа, определяющая тип бликового освещения. Всего 4 типа + интерполяции между ними
$user$normal	// RT1: float3 нормаль в view space + float hemi
$user$albedo	// RT2: float3 цвет + float gloss
$user$generic0  // текущая результирующая картинка, экран
$user$generic1
$user$bloom1    // сильно заблюренная текстурка, блум-текстура
$user$bloom2
$user$accum
$user$depth
$user$tonemap
$user$tonemap_src
$user$luminance
$user$material
$user$smap_depth
$user$smap_surf
$user$env_s0
$user$env_s1
$user$sky0
$user$sky1
$user$jitter_x	// текстурки с рандомными цветами. 4 штуки. По умолчанию доступны только в accum_direct/point/spot
$user$lum_t8
$user$lum_t64

// G-buffer
sampler2D s_position	// $user$position // RT0: float3 позиция в view space + float material. В материале хранится константа, определяющая тип бликового освещения. Всего 4 типа + интерполяции между ними
sampler2D s_normal		// $user$normal //  RT1: float3 нормаль в view space + float hemi
sampler2D s_diffuse		// $user$albedo //  RT2: float3 цвет + float gloss
// model-specified
sampler2D s_base		// любая текстура, связанная с моделью
sampler2D s_hemi		// хеми-лайтмап, связанный с моделью
sampler2D s_lmap		// лайтмап, связанный с моделью
sampler2D s_bump		// бамп, связанный с моделью
sampler2D s_bumpX		// bump#, связанный с моделью
sampler2D s_bumpD		// детальная текстура бампа, связанная с моделью
sampler2D s_detail		// детальная текстура, связанная с моделью
//CBlender_BmmD specified
s_mask
s_dt_r
s_dt_g
s_dt_b
s_dt_a
s_dn_r
s_dn_g
s_dn_b
s_dn_a


sampler2D s_image		// $user$generic0 // текущая результирующая картинка, экран
sampler2D s_bloom		// $user$bloom1/bloom2   //
sampler2D s_distort		// $user$generic1 //
sampler2D s_accumulator // $user$accum	  //
sampler2D s_depth		// $user$depth	  //
sampler2D s_tonemap		// $user$tonemap  //
sampler3D s_material	// $user$material //
sampler2D s_env			// $user$env_s0/model-specified //
sampler2D s_smap		// $user$smap_depth/smap_surf  //

