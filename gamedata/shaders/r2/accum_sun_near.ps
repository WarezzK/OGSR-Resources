#include "common.h"
#include "lmodel.h"
#include "shadow.h"

#ifdef USE_SUNFILTER
float4 	main		( float2 tc : TEXCOORD0, float4 tcJ : TEXCOORD1, float3 T : TANGENT, float4 color : COLOR0 ) : COLOR
{
  float4 	_P	= get_full_position(tc);//tex2D 	(s_position, 	tc)	;
		_P.w 	= 1.f					;
	float4 	PS	= mul		(m_shadow, 	_P)	;
	float 	s 	= shadowtest_sun(PS,tcJ)*sunmask(_P)	;
	return 	s	;
}
#else
float4 	main		( float2 tc : TEXCOORD0, float4 tcJ : TEXCOORD1, float3 T : TANGENT, float4 color : COLOR0) : COLOR
{
  float4 _P			= get_full_position(tc);//tex2D 	(s_position, 	tc);
  float4  _N		= get_full_normal(tc);//tex2D 	(s_normal,   	tc);
  float _G			= get_gloss(tc);

 
	// ----- light-model
	float4	_light 	= plight_infinity (_P.w,_P,_N,Ldynamic_dir);
	float	ds		= (_light.x + lerp(_light.x, _light.w, _G));
	float4	light	= float4(ds,ds,ds,ds);
	// ----- shadow
  	float4 	P4 	= float4	(_P.x,_P.y,_P.z,1.f);
	float4 	PS	= mul		(m_shadow, 	P4);
	float 	s 	= sunmask	(P4);
	#ifdef 	USE_SJITTER
	  s 	*= shadowtest_sun 	(PS,tcJ);
	#else
	  s 	*= shadow		(PS, P4, 1.0);
	#endif
	float4   ret	= Ldynamic_color * light * s;
	
	return 		blend		(ret.xyzw,tc);
}
#endif