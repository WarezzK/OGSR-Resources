--/ news_main_spawn.script /--
--/ Mob spawn news /--
--/ OGS Evolution Team 2009 /--
--/ Использованы материалы by sokol_jack (sokol_jack@mail.ru) /--
--/ version 0.4 /--

--/ Модуль сообщений о появившихся монстрах /--


local random_news = system_ini():r_s32("options","random_news")
local spawn_message_flag = system_ini():r_s32("options","spawn_message_flag")

local spawn_komm_message_prob = 0.5 -- общая вероятность комментариев к сообщениям о монстрах

local s_mob_u = 0
local s_mob_meter = 0


local level_name = {
	["l01_escape"] = {"Cordon", "at Cordon"},
	["l02_garbage"] = {"Garbage", "at the Garbage"},
	["l03_agroprom"] = {"Agroprom Research Institute", "at the Agroprom Research Institute"},
	["l03u_agr_underground"] = {"Agroprom Tunnels", "in the Agroprom Tunnels"},
	["l04_darkvalley"] = {"Dark Valley", "in the Dark Valley"},
	["l04u_labx18"] = {"X-18 lab", "in the X-18 lab"},
	["l05_bar"] = {"'Rostok' factory", "at the 'Rostok' factory"},
	["l06_rostok"] = {"Wild Territory", "on the Wild Territory"},
	["l07_military"] = {"Army Warehouses", "at the Army Warehouses"},
	["l08_yantar"] = {"Yantar", "at Yantar"},
	["l08u_brainlab"] = {"X-18 lab", "in the X-18 lab"},
	["l10_radar"] = {"Brain Scorcher", "at the Brain Scorcher"},
	["l10u_bunker"] = {"X-10 lab", "in the X-10 lab"},
	["l11_pripyat"] = {"Pripyat", "in Pripyat"},
	["l12_stancia"] = {"Chernobyl NPP", "at the Chernobyl NPP"},
	["l12_stancia_2"] = {"Chernobyl NPP", "at the Chernobyl NPP"},
	["l12u_control_monolith"] = {"Chernobyl NPP", "at the Chernobyl NPP"},
	["l12u_sarcofag"] = {"Containment", "in the Containment"},
	["l09_deadcity_ogse"] = {"Dead City", "In City-32"},
	["l13_generators_ogse"] = {"Generators", "On Generators"},
	["k01_darkscape_ogse"] = {"Darkscape", "In Darkscape"},
	["l22_marsh"] = {"Black swamp", "On Swamp"},
	["l23_x9"] = {"URR", "In railroad hub"}	
}

local monster_classes = {}
monster_classes[clsid.controller_s] 	= {"controller", "a controller", "several controllers", "a group of controllers", "many controllers", "a big gathering of controllers"}
monster_classes[clsid.chimera_s] 		= {"chimera", "a chimera", "several chimeras", "a small group of chimeras", "a group of chimeras", "many chimeras"}
monster_classes[clsid.poltergeist_s] 	= {"poltergeist", "a poltergeist", "several poltergeists", "a group of poltergeists", "a crowd of poltergeists", "a gathering of poltergeists"}
monster_classes[clsid.snork_s] 			= {"snork", "a snork", "several snorks", "a group of snorks", "many snorks", "numerous snorks"}
monster_classes[clsid.gigant_s] 		= {"pseudo_gigant", "a pseudogiant", "several pseudogiants", "a group of pseudogiants", "a gathering of pseudogiants", "many pseudogiants"}
monster_classes[clsid.burer_s] 			= {"burer", "a burer", "several burers", "a group of burers", "a crowd of burers", "very many burers"}
monster_classes[clsid.bloodsucker_s] 	= {"bloodsucker", "a bloodsucker", "several bloodsuckers", "a group of bloodsuckers", "many bloodsuckers", "a crowd of bloodsuckers"}
monster_classes[clsid.zombie_s] 		= {"zombie", "a zombie", "several zombies", "a group of zombies", "many zombies", "crowds of zombies"}
monster_classes[clsid.boar_s] 			= {"boar", "a boar", "several boars", "a group of boars", "a pack of boars", "a big pack of boars"}
monster_classes[clsid.cat_s] 			= {"cat", "a cat", "several cats", "a small group of cats", "a band of cats", "a big band of cats"}
monster_classes[clsid.pseudodog_s] 		= {"pseudodog", "a pseudodog", "several pseudodogs", "a small pack of pseudodogs", "a pack of pseudodogs", "a big pack of pseudodogs"}
monster_classes[clsid.psy_dog_s] 		= {"psy_dog", "a psi-dog", "several psi-dogs", "a small pack of psi-dogs", "a pack of psi-dogs", "a big pack of psi-dogs"}
monster_classes[clsid.dog_s] 			= {"dog", "a blind dog", "several blind dogs", "a small pack of blind dogs", "a pack of blind dogs", "a big pack of blind dogs"}
monster_classes[clsid.flesh_s] 			= {"flesh", "a flesh", "several fleshes", "a group of fleshes", "many fleshes", "crowds of fleshes"}
monster_classes[clsid.tushkano_s] 		= {"tushkano", "a rodent", "several rodents", "a small band of rodents", "a band of rodents", "a big band of rodents"}
monster_classes[clsid.fracture_s] 		= {"fracture", "a fracture", "several fractures", "a group of fractures", "a gathering of fractures", "numerous fractures"}


local spawn_add_text_green = {
"Is there anybody willing to go hunting?",
"Easy prey!",
"Is anybody interested in pelts?"
}
local spawn_add_text_amber = {
"Are there any brave stalkers willing to go hunting?",
"One can earn a lot, if not a coward!",
"Hunting time! Anybody wanna join? It ain't to be done alone, you know...",
"There's a nice chance to make good money! Not for chicken-hearted...",
"Somebody's bare bones lying here...",
"Stay alert!",
"Who's with me to waste the scum?",
"Somebody's got torn, it seems...",
"No way going there alone! God save my bacon.",
"Has anybody requested for a safari?",
"Keep your eyes open!"
}
local spawn_add_text_red = {
"That was close!",
"I almost thought that was the end... Hardly managed to take to my heels!",
"I took a roundabout way so as not to stay in harm's way.",
"Be careful there.",
"Take care!",
"Better stay away from there.",
"No way there now.",
"Prefered to take to my heels from that place.",
"God bless my speedy feet!",
"Blood stains... Scraps of flesh... Bad luck for somebody...",
"What would I do, if the wind was blowing TO THEIR side?.. THAT'S a question...",
"How unlucky! Not any way through there...",
"Mind the danger!"
}

local spawn_komment_text_green = {
"It's no more than a waste of time.",
"Not... This ain't a way to make much. Not enough even to pay for the rounds.",
"Are you suggesting to hunt together? Thanks, I'm out. No time for trifles.",
"No big deal..."
}
local spawn_komment_text_amber = {
"Are you suggesting to hunt together? Hm... Why not!",
"Where was that, you say? Send me the coordinates and lets hunt!",
"I may join. Way more fun to shoot them in a band!",
"I would like to join the hunt, if you don't mind.",
"So damn many of them! No place to take a step! Lets waste them! Anybody coming along?!",
"So many... High time to shoot them dead!",
"Hm... This ain't right.",
"Where the hell do they come from? So many of them! They must be shot before it's too late."
}
local spawn_komment_text_red = {
"Damn it... No way to poke one's nose there now...",
"Shit! The very time I have to pass there! Is there anybody around heading the same way? Maybe we can get through.",
"So plenty of them... Where do they keep coming from?..",
"Fuck! What should I do now?",
"Guys! Whoever strong, lets clean up the territory! Anybody eager for a noble deed?",
"Heh! No safe way to get there any longer...",
"How did you manage to make through alive?!",
"Consider yourself lucky to have got out alive..."
}

local see_word_text={
"Saw",
"Noticed",
"Spotted",
"Made out",
"Happened to see",
"Discovered",
"Came across",
"Stumbled upon",
"Nearly bumped into",
"Met",
"Watched"
}

function on_spawn(obj)
if random_news == 1 then
if spawn_message_flag == 0 then return end
if isIndoor(level.name()) or isIndoor(get_object_levelname(obj)) or news_main_data.chk_Vibros() then return end
	if (obj) then
		if (_g.IsMonster(obj)) then
		
		local mob_u = {}
		mob_u.spawn_time = news_main_data.game_minutes()
		mob_u.level = get_object_levelname(obj)
		mob_u.name = get_clsid(obj) or ""
		
		if s_mob_u == 0 or s_mob_meter == 0 then
			s_mob_u = mob_u
			s_mob_meter = 1
			return
		else
			if (mob_u.spawn_time - s_mob_u.spawn_time > 5) or (mob_u.level ~= s_mob_u.level) or (mob_u.name ~= s_mob_u.name) then
				mob_spawn_news(s_mob_u.spawn_time,s_mob_u.level,s_mob_u.name,s_mob_meter)
				s_mob_u = mob_u
				s_mob_meter = 1
			else
				s_mob_meter = s_mob_meter+1
				return
			end
		end
		
	end
end
end
end

function mob_spawn_news(m_mob_spawn_time,m_mob_level,m_mob_name,m_mob_meter)
if m_mob_level == "l12u_sarcofag" or m_mob_level == "l12u_control_monolith" or m_mob_level == "l12_stancia_2" or m_mob_level == "l12_stancia" or m_mob_level == "l11_pripyat" then return end
if m_mob_level == "l10_radar" and not has_alife_info("aes_found_sarcofag") then return end
if m_mob_level == "l08_yantar" and not has_alife_info("yan_kill_brain_done") then return end
if not has_alife_info("esc_trader_can_leave") then return end
if has_alife_info("pre_blowout") then return end
	local alarm_status = "green"
	local alarm_number = 1
	local warning_status = "green"
	
	if m_mob_name == clsid.controller_s or m_mob_name == clsid.chimera_s or m_mob_name == clsid.gigant_s or m_mob_name == clsid.bloodsucker_s then alarm_status = "red"
	elseif m_mob_name == clsid.poltergeist_s or m_mob_name == clsid.snork_s or m_mob_name == clsid.burer_s or m_mob_name == clsid.psy_dog_s then alarm_status = "amber"
	else alarm_status = "green"
	end
	
	if m_mob_meter == nil or m_mob_meter == 0 then alarm_number = 1
	elseif m_mob_meter == 1 then alarm_number = 2
	elseif m_mob_meter <= 3 then alarm_number = 3
	elseif m_mob_meter <= 6 then alarm_number = 4
	elseif m_mob_meter <= 10 then alarm_number = 5
	elseif m_mob_meter > 10 then alarm_number = 6
	end

	if alarm_status == "red" then
		if alarm_number <= 2 then warning_status = "amber"
		elseif alarm_number > 2 then warning_status = "red"
		end
	elseif alarm_status == "amber" then
		if alarm_number <= 2 then warning_status = "green"
		elseif alarm_number <= 4 then warning_status = "amber"
		elseif alarm_number > 4 then warning_status = "red"
		end
	elseif alarm_status == "green" then
		if alarm_number <= 4 then warning_status = "green"
		elseif alarm_number > 4 then warning_status = "amber"
		end
	end

	if chek_warning_status(warning_status) then
		local see_time = get_see_time(m_mob_spawn_time)
		if see_time == false then return end
		local from = news_main_new.gen_names_strings()
		local see = gen_see_word()
		local level = get_level_name(m_mob_level, 2)
		local name = get_monster_name(m_mob_name, alarm_number)
		local add_text = ""
		
		if warning_status == "red" and math.random() < 0.6 then add_text = spawn_add_text_red[math.random(table.getn(spawn_add_text_red))]
		elseif warning_status == "amber" and math.random() < 0.4 then add_text = spawn_add_text_amber[math.random(table.getn(spawn_add_text_amber))]
		elseif warning_status == "green" and math.random() < 0.3 then add_text = spawn_add_text_green[math.random(table.getn(spawn_add_text_green))]
		else add_text = ""
		end
		
--		local text = see_time.." "..level.." "..see.." "..name..". "..add_text
		local text = see.." "..name.." "..level.." "..see_time.." "..add_text -- added by Filon, 11.12.2011
		local news_text = "%c[255,160,160,160]"..from..":\\n".."%c[default]"..text
		db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(498,47,83,47), 0, 13000)
			
		if warning_status == "red" and (math.random() < spawn_komm_message_prob*0.9) then komment_str = spawn_komment_text_red[math.random(table.getn(spawn_komment_text_red))]
		elseif warning_status == "amber" and (math.random() < spawn_komm_message_prob*0.7) then komment_str = spawn_komment_text_amber[math.random(table.getn(spawn_komment_text_amber))]
		elseif warning_status == "green" and (math.random() < spawn_komm_message_prob*0.4) then komment_str = spawn_komment_text_green[math.random(table.getn(spawn_komment_text_green))]
		else komment_str = ""
		end
		if komment_str ~= "" then
			local from = news_main_new.gen_names_strings()
			local news_text = "%c[255,160,160,160]"..from..":\\n".."%c[default]"..komment_str
			db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(498,47,83,47), math.random(1000,4000), 13000)
		end
		
	end
end

function get_see_time(gm_mob_spawn_time)
local msg_time = news_main_data.game_minutes()
local m_see_time = msg_time - gm_mob_spawn_time
	if msg_time - gm_mob_spawn_time < 3 then m_see_time = "a wink or two ago."
	elseif msg_time - gm_mob_spawn_time < 10 then m_see_time = "a couple of minutes ago."
	elseif msg_time - gm_mob_spawn_time < 20 then m_see_time = "less than half an hour ago."
	elseif msg_time - gm_mob_spawn_time < 30 then m_see_time = "about half an hour ago."
	elseif msg_time - gm_mob_spawn_time < 45 then m_see_time = "less than one hour ago."
	elseif msg_time - gm_mob_spawn_time < 60 then m_see_time = "about one hour ago."
	elseif msg_time - gm_mob_spawn_time < 90 then m_see_time = "an hour and a half ago."
	elseif msg_time - gm_mob_spawn_time < 120 then m_see_time = "today."
	elseif msg_time - gm_mob_spawn_time >= 120 then m_see_time = false
	end
return m_see_time
end

function gen_see_word()
	local see_word = see_word_text[math.random(table.getn(see_word_text))]
	return see_word
end

function get_level_name(level_, index)
	if index == nil then index = 1 end
	local m_s_level 
	if level_ == nil then
		m_s_level = level.name()
	else
		m_s_level = level_
	end
	local m_tmp_str = ""
	if level_name[m_s_level] ~= nil then
		if (level_name[m_s_level][index] ~= nil) then
			m_tmp_str = level_name[m_s_level][index]..""
		end
	end
	return m_tmp_str
end

function get_object_levelname(obj)
	local mlevel = "null"	
	if (obj) then
		local m_game_vertex
		local nm = "nil"
		if (obj.name) then nm = obj:name() end
		if (isGameObject(obj)) then
			m_game_vertex = obj:game_vertex_id()
		else
			m_game_vertex = obj.m_game_vertex_id
		end
		if (m_game_vertex) then
			local lvert = game_graph():vertex(m_game_vertex)
			if (lvert ~= nil and lvert.level_id) then
				local lid = lvert:level_id()
				if (lid ~= nil) then
					mlevel = alife():level_name(lid)
				end
			end
			if mlevel == nil then mlevel = "nil" end
		end
	end
	return mlevel
end

function get_monster_name(gm_mob_name, index)
	local m_comm = ""
	local m_n = ""
	if index == nil then index = 1 end
		local m_clsid = gm_mob_name
		if m_clsid then
			m_comm = monster_classes[m_clsid]
			if m_comm == nil then
				m_n = ""
			else
				if (monster_classes[m_clsid][index] ~= nil) then
					m_n = monster_classes[m_clsid][index]
				end
			end
		end
	return m_n
end

function isGameObject(obj)
	local bResult = false
	if (obj and obj.fov) then
		bResult = true
	end
	return bResult
end

function chek_warning_status(warn_stat)
if spawn_message_flag == 0 then return false
elseif spawn_message_flag == 1 then
	if warn_stat == "red" then return true else return false end
elseif spawn_message_flag == 2 then
	if warn_stat == "red" or warn_stat == "amber" then return true else return false end
elseif spawn_message_flag == 3 then
	if warn_stat == "red" or warn_stat == "amber" or warn_stat == "green" then return true else return false end
else return false
end 
end